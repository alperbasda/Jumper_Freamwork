
//---------------------------------------------------------------------------------------
//      This code was generated by a Jumper tool. 
//      Runtime version : 1.0
//      Generation Time : 23.10.2023 11:28
//---------------------------------------------------------------------------------------

using AutoMapper;
using IdentityServer.Application.Features.UserRefreshTokens.Queries.ListDynamic;
using IdentityServer.Application.Features.UserRefreshTokens.Rules;
using IdentityServer.Application.Services.Repositories;
using IdentityServer.Domain.Entities;
using Core.Persistence.Models.Responses;
using MediatR;
namespace IdentityServer.Application.Features.UserRefreshTokens.Handlers.Queries.ListDynamic;

public class ListDynamicUserRefreshTokenQueryHandler : IRequestHandler<ListDynamicUserRefreshTokenQuery, ListModel<ListDynamicUserRefreshTokenResponse>>
{
    private readonly IUserRefreshTokenDal _userRefreshTokenDal;
    private readonly UserRefreshTokenBusinessRules _userRefreshTokenBusinessRules;
    private readonly IMapper _mapper;

    public ListDynamicUserRefreshTokenQueryHandler(IMapper mapper, IUserRefreshTokenDal userRefreshTokenDal, UserRefreshTokenBusinessRules userRefreshTokenBusinessRules)
    {
        _mapper = mapper;
        _userRefreshTokenDal = userRefreshTokenDal;
        _userRefreshTokenBusinessRules = userRefreshTokenBusinessRules;
    }

    public async Task<ListModel<ListDynamicUserRefreshTokenResponse>> Handle(ListDynamicUserRefreshTokenQuery request, CancellationToken cancellationToken)
    {
        var datas = await _userRefreshTokenDal.GetListByDynamicAsync(request.DynamicQuery, size: request.PageRequest.PageSize, index: request.PageRequest.PageIndex, cancellationToken : cancellationToken);

        //İş Kurallarınızı Burada Çağırabilirsiniz.

        var returnData = _mapper.Map<ListModel<ListDynamicUserRefreshTokenResponse>>(datas);
        _userRefreshTokenBusinessRules.FillDynamicFilter(returnData, request.DynamicQuery, request.PageRequest);
        return returnData;

    }
}



