
//---------------------------------------------------------------------------------------
//      This code was generated by a Jumper tool. 
//      Runtime version : 1.0
//      Generation Time : 23.10.2023 11:28
//---------------------------------------------------------------------------------------

using AutoMapper;
using IdentityServer.Application.Features.RoleUserRelations.Commands.Create;
using IdentityServer.Application.Features.RoleUserRelations.Rules;
using IdentityServer.Application.Services.Repositories;
using IdentityServer.Domain.Entities;
using MediatR;
namespace IdentityServer.Application.Features.RoleUserRelations.Handlers.Commands.Create;

public class CreateRoleUserRelationCommandHandler : IRequestHandler<CreateRoleUserRelationCommand, CreateRoleUserRelationResponse>
{
    private readonly IRoleUserRelationDal _roleUserRelationDal;
    private readonly RoleUserRelationBusinessRules _roleUserRelationBusinessRules;
    private readonly IMapper _mapper;

    public CreateRoleUserRelationCommandHandler(IMapper mapper, IRoleUserRelationDal roleUserRelationDal, RoleUserRelationBusinessRules roleUserRelationBusinessRules)
    {
        _mapper = mapper;
        _roleUserRelationDal = roleUserRelationDal;
        _roleUserRelationBusinessRules = roleUserRelationBusinessRules;
    }

    public async Task<CreateRoleUserRelationResponse> Handle(CreateRoleUserRelationCommand request, CancellationToken cancellationToken)
    {
        var data = _mapper.Map<RoleUserRelation>(request);

        _roleUserRelationBusinessRules.SetId(data);
        //İş Kurallarınızı Burada Çağırabilirsiniz.

        await _roleUserRelationDal.AddAsync(data);

        return _mapper.Map<CreateRoleUserRelationResponse>(data);
    }
}



