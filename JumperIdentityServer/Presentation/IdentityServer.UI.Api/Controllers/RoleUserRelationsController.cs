
//---------------------------------------------------------------------------------------
//      This code was generated by a Jumper tool. 
//      Runtime version : 1.0
//      Generation Time : 24.10.2023 10:52
//---------------------------------------------------------------------------------------

using IdentityServer.Application.Features.RoleUserRelations.Commands.Create;
using IdentityServer.Application.Features.RoleUserRelations.Commands.DeleteById;
using IdentityServer.Application.Features.RoleUserRelations.Commands.Update;
using IdentityServer.Application.Features.RoleUserRelations.Queries.GetById;
using IdentityServer.Application.Features.RoleUserRelations.Queries.ListDynamic;
using IdentityServer.UI.Api.ActionFilters;
using IdentityServer.UI.Api.Controllers.Base;
using Core.Persistence.Models.Responses;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Specialized;
using System.Web;
using Core.WebHelper.NameValueCollectionHelpers;
using IdentityServer.Domain.Entities;

namespace IdentityServer.UI.Api.Controllers
{
    [Route("RoleUserRelations")]
    public class RoleUserRelationsController : MediatrController
    {
        [HttpGet("{id}")]
        public async Task<IActionResult> GetByIdAsync(Guid id)
        {
            var response = await base.Mediator.Send(new GetByIdRoleUserRelationQuery { Id = id });
            return Ok(Response<GetByIdRoleUserRelationResponse>.Success(response,200));
        }

        [HttpGet("getlist")]
        public async Task<IActionResult> ListAsync(NameValueCollection collection)
        {
            var query = new ListDynamicRoleUserRelationQuery
            {
                DynamicQuery = collection.ToDynamicFilter<RoleUserRelation>(),
                PageRequest = collection.ToPageRequest()
            };
            var response = await base.Mediator.Send(query);

            return Ok(Response<ListModel<ListDynamicRoleUserRelationResponse>>.Success(response,200));
        }

        [HttpPost("list")]
        public async Task<IActionResult> ListAsync(ListDynamicRoleUserRelationQuery query)
        {
            var response = await base.Mediator.Send(query);
            return Ok(Response<ListModel<ListDynamicRoleUserRelationResponse>>.Success(response,200));
        }

        [HttpPost]
        public async Task<IActionResult> CreateAsync(CreateRoleUserRelationCommand request)
        {
            return Ok(Response<CreateRoleUserRelationResponse>.Success(await base.Mediator.Send(request), 200));
        }

        [HttpPut]
        public async Task<IActionResult> UpdateAsync(UpdateRoleUserRelationCommand request)
        {
            return Ok(Response<UpdateRoleUserRelationResponse>.Success(await base.Mediator.Send(request), 200));
        }

        [HttpDelete]
        public async Task<IActionResult> DeleteByIdAsync(Guid id)
        {
            return Ok(Response<DeleteByIdRoleUserRelationResponse>.Success(await base.Mediator.Send(new DeleteByIdRoleUserRelationCommand { Id = id }), 200));
        }

    }
}


