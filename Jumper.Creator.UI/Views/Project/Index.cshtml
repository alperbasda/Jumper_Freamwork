@using Core.Persistence.Dynamic;
@using Core.Persistence.Models.Responses;
@using Core.WebHelper.NameValueCollectionHelpers;
@using Jumper.Application.Features.ProjectDeclarations.Handlers.Queries.GetListDynamic;
@using Jumper.Domain.MongoEntities;
@using Jumper.Creator.UI;
@using Jumper.Application.Features.ProjectDeclarations.Queries.GetListDynamic;
@{
    var filters = new List<Filter>();
    if (Model != null && Model.DynamicQuery != null && Model.DynamicQuery.Filter != null)
    {
        filters.AddRange(CollectionToDynamicQueryExtension.GetAllFilters(Model.DynamicQuery.Filter));
    }

}
@model ListModel<GetListDynamicProjectDeclarationQueryResponse>

<div class="card">
    <div class="card-header">
        <!--begin::Actions-->
        <div class="card-title">
            <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                <!--begin::Item-->
                <li class="breadcrumb-item">
                    <a class="text-hover-primary" href="@Url.Action("Index","Home")">Anasayfa</a>
                </li>
                <!--end::Item-->
                <li class="breadcrumb-item">
                    <span class="bullet bg-gray-400 w-5px h-2px"></span>
                </li>
                <li class="breadcrumb-item text-muted">
                    <h6 class="text-muted">Proje Listesi</h6>
                </li>
                <!--end::Item-->
            </ul>

        </div>
        <!--end::Actions-->
        <div class="card-toolbar">
            <div class="card-toolbar">
                <ul class="nav nav-tabs nav-line-tabs nav-stretch fs-6 border-0">
                    <li class="nav-item">
                        <a href="@Url.Action("Create","Project")" class="btn btn-sm fw-bold btn-secondary nav-link">Yeni Proje Ekle</a>
                    </li>
                </ul>
            </div>
        </div>

    </div>

    <div class="card-body p-0">
        <form method="get" action="@Url.Action("Index","Project")">
            <div class="d-flex flex-column flex-column-fluid">
                <div id="kt_app_content" class="app-content flex-column-fluid">
                    <div id="kt_app_content_container" class="app-container container-xxxl">
                        <div class="table-responsive">
                            <table class="dynamic-table table table-hover table-row-bordered gy-5 gs-7">
                                <tr>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.Name)" href="#/">
                                                Ad &nbsp;
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.Description)" href="#/">
                                                Açıklama &nbsp;
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.CreateApi)" href="#/">
                                                Api Projesi
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.CreateUI)" href="#/">
                                                UI Projesi
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.UseRabbitMq)" href="#/">
                                                RabbitMq Entegrasyonu
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.UseSerilog)" href="#/">
                                                SeriLog Entegrasyonu
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.UseCache)" href="#/">
                                                Cache Entegrasyonu
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.CreatedTime)" href="#/">
                                                Oluşturulma T. &nbsp;
                                            </a>
                                        </b>
                                    </th>
                                    <th>
                                        <b>
                                            <a data-sort="@nameof(ProjectDeclaration.UpdatedTime)" href="#/">
                                                Düzenlenme T. &nbsp;
                                            </a>
                                        </b>
                                    </th>

                                </tr>

                                <tr>

                                    <th>
                                        <input type="text" class="form-control form-control-sm" name="Name" placeholder="Aranacak kelime yazın" value="@filters.FirstOrDefault(w=>w.Field == nameof(ProjectDeclaration.Name))?.Value" />
                                    </th>
                                    <th>
                                        <input type="text" class="form-control form-control-sm" name="Description" placeholder="Aranacak kelime yazın" value="@filters.FirstOrDefault(w=>w.Field == nameof(ProjectDeclaration.Description))?.Value" />
                                    </th>
                                    <th>
                                        <select name="CreateApi" class="form-control form-control-sm">
                                            @{
                                                var filter = filters.FirstOrDefault(w => w.Field == nameof(ProjectDeclaration.CreateApi))?.Value;
                                                if (filter == null)
                                                {
                                                    <option selected value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else if (filter != null && Convert.ToBoolean(filter))
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option selected value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false" selected> Hayır </option>
                                                }
                                            }

                                        </select>
                                    </th>
                                    <th>
                                        <select name="CreateUI" class="form-control form-control-sm">
                                            @{
                                                filter = filters.FirstOrDefault(w => w.Field == nameof(ProjectDeclaration.CreateUI))?.Value;
                                                if (filter == null)
                                                {
                                                    <option selected value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else if (filter != null && Convert.ToBoolean(filter))
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option selected value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false" selected> Hayır </option>
                                                }
                                            }

                                        </select>
                                    </th>
                                   
                                    <th>
                                        <select name="UseRabbitMq" class="form-control form-control-sm">
                                            @{
                                                filter = filters.FirstOrDefault(w => w.Field == nameof(ProjectDeclaration.UseRabbitMq))?.Value;
                                                if (filter == null)
                                                {
                                                    <option selected value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else if (filter != null && Convert.ToBoolean(filter))
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option selected value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false" selected> Hayır </option>
                                                }
                                            }

                                        </select>
                                    </th>
                                    <th>
                                        <select name="UseSerilog" class="form-control form-control-sm">
                                            @{
                                                filter = filters.FirstOrDefault(w => w.Field == nameof(ProjectDeclaration.UseSerilog))?.Value;
                                                if (filter == null)
                                                {
                                                    <option selected value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else if (filter != null && Convert.ToBoolean(filter))
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option selected value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false" selected> Hayır </option>
                                                }
                                            }

                                        </select>
                                    </th>
                                    <th>
                                        <select name="UseCache" class="form-control form-control-sm">
                                            @{
                                                filter = filters.FirstOrDefault(w => w.Field == nameof(ProjectDeclaration.UseCache))?.Value;
                                                if (filter == null)
                                                {
                                                    <option selected value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else if (filter != null && Convert.ToBoolean(filter))
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option selected value="true"> Evet </option>
                                                    <option value="false"> Hayır </option>
                                                }
                                                else
                                                {
                                                    <option value=""> Tümü </option>
                                                    <option value="true"> Evet </option>
                                                    <option value="false" selected> Hayır </option>
                                                }
                                            }

                                        </select>
                                    </th>

                                    <th>
                                        <input type="datetime" class="form-control form-control-sm" name="CreatedTime" placeholder="Aranacak kelime yazın" value="@filters.FirstOrDefault(w=>w.Field == nameof(ProjectDeclaration.CreatedTime))?.Value" />
                                    </th>
                                    <th>
                                        <input type="datetime" class="form-control form-control-sm" name="UpdatedTime" placeholder="Aranacak kelime yazın" value="@filters.FirstOrDefault(w=>w.Field == nameof(ProjectDeclaration.UpdatedTime))?.Value" />
                                    </th>
                                    <th>
                                        <input type="submit" class="btn btn-primary btn-sm" value="Filtrele" />
                                    </th>


                                </tr>
                                @foreach (var item in Model.Items)
                                {
                                    <tr>
                                        <td>@item.Name</td>
                                        @if (item.Description.Length > 50)
                                        {
                                            <td>
                                                @item.Description.Substring(50) ...
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                @item.Description
                                            </td>
                                        }
                                        <td>@(item.CreateApi ? "Evet" : "Hayır")</td>
                                        <td>@(item.CreateUI ? "Evet" : "Hayır")</td>
                                        <td>@(item.UseRabbitMq ? Html.Raw("<a href='" + Url.Action("UpdateRabbitMqSettings", "Project", new { id = item.Id }) + "'> Evet <i class='fa fa-edit'></i> </a>") : "Hayır")</td>
                                        <td>@(item.UseSerilog ? Html.Raw("<a href='" + Url.Action("UpdateSerilogSettings", "Project", new { id = item.Id }) + "'> Evet <i class='fa fa-edit'></i> </a>") : "Hayır")</td>
                                        <td>@(item.UseCache ? Html.Raw("<a href='" + Url.Action("UpdateCacheSettings", "Project", new { id = item.Id }) + "'> Evet <i class='fa fa-edit'></i> </a>") : "Hayır")</td>


                                        <td>@item.CreatedTime</td>
                                        <td>@item.UpdatedTime</td>
                                        <td>

                                            <div class="d-flex justify-content-around">
                                                <a href="@Url.Action("UpdateInfo","Project")?id=@item.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Düzenle">
                                                    <i class="fa fa-edit"></i>
                                                </a>

                                                <a class="delete-link" href="@Url.Action("Delete","Project")?id=@item.Id" data-bs-toggle="tooltip" data-bs-placement="top" title="Sil">
                                                    <i class="fa fa-trash"></i>
                                                </a>
                                                <a href="@Url.Action("Index","ProjectEntity")?ProjectDeclarationName=@item.Name" data-bs-toggle="tooltip" data-bs-placement="top" title="Nesneleri Ayarla">
                                                    <i class="fa fa-eye"></i>
                                                </a>
                                            </div>


                                        </td>
                                    </tr>
                                }
                            </table>

                            @if (Model.Count == 0)
                            {
                                <div class="text-center ">
                                    <h5>
                                        Kriterlere uygun veri bulunamadı.
                                    </h5>

                                </div>
                            }

                        </div>



                        <ul class="pagination pagination-circle">


                            @if (Model.Pages > 1)
                            {
                                // "Başa git Git" butonu
                                if (Model.HasPrevious)
                                {
                                    <li class="page-item first">
                                        <a data-page="1" class="page-link" href="#/">
                                            <i class="fa-solid fa-angles-left fa-beat fs-2"></i>
                                        </a>
                                    </li>
                                }
                                for (int i = Math.Max(1, Model.Index - 3); i < Model.Index; i++)
                                {
                                    <li class="page-item">
                                        <a data-page="@i" class="page-link" href="#/"> @i </a>
                                    </li>
                                }
                                // Mevcut sayfa
                                <li class="page-item active">
                                    <span class=" page-link">@Model.Index</span>
                                </li>
                                for (int i = Model.Index + 1; i <= Math.Min(Model.Pages, Model.Index + 3); i++)
                                {
                                    <li class="page-item">
                                        <a data-page="@i" class="page-link" href="#/">@i</a>
                                    </li>
                                }
                                // "Sona Git" butonu
                                if (Model.HasNext)
                                {
                                    <li class="page-item last  ">
                                        <a data-page="@Model.Pages" class="page-link" href="#/">
                                            <i class="fa-solid fa-angles-right fa-beat fs-2"></i>
                                        </a>
                                    </li>
                                }
                            }
                        </ul>


                    </div>
                </div>
            </div>
        </form>
    </div>
</div>
